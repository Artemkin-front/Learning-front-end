/* Псевдоклассы пишутся по принципу: селектор :псевдокласс{} */
.test {
	background: red;
}
.test:hover{ /* псевдокласс который применяет нужные стили при наведении мышкой на объект */
	background: green;
}
.test:focus{ /* псевдокласс который применяет стили при выборе объекта через клавиатуру или же при нажатии мышкой на него, только на активных элементах*/
	background: blue;
}
.test:active{ /* псевдокласс который применяет стили только при активном нажании на элемент, например при удержании лкм на кнопке */
	background: pink;
}
.test1 > button:first-child{ /* псевдокласс который применяет стили к первому ребенку при вложенности тегов last-child - к последнему ребенку*/
	background: green;
}
.test1 > button:nth-child(3) { /* псевдокласс который применяет стили к ребенку номер которого мы укажем при значении odd применят только к нечетным элементам, а even к четным*/
	background: blue;
}
.test2 > button:nth-child(3n){/* также можно применить стили по какому либо правилу задать его в скобках с помощью n например 3n применит стили к каждой 3-й кнопке */
	background: pink;
}
form{
	margin-top:200px;
	margin-bottom: 400px;
}
.input:required{ /* Псевдокласс который применит стили только к тегам с атрибутом required */
	background: red;
}
.input:checked{ /* Псевдокласс который применяет стили в случае активированного чекбокса к нему же */
	width:100px;
	height: 100px;
}
.input:disabled{ /* Псевдокласс который применяет стили только к объектам которые имеют атрибут disabled */
	background: yellow;
}
.input:not(.input){ /* Псевдокласс который применяет стили только к тем элементам у которых нет того что указано в условии в скобках */
background: green;
}
.input:not(:not([type="password"])){
	padding: 30px;
}
/* Псевдоэлементы структура написания следующая: селекто::псевдоэлемент{} */
.input12{
	margin:0;
	margin-bottom: 40px;
}
.input1::placeholder{ /* Псевдоэлемент который применят стили к тексту-подсказке который указан в поле ввода */
	color: red;
	font-size: 15px;
}
.test-div::before{ /* псевдоэлемент который работает только с content, данный псевдокласс вставит текст который был написан в кавычках перед элементом написанным в html документе */
	content: 'hello ';
}
.test-div::after{ /* псевдоэлемент который вставляет контент после элемента */
	content: ' hello'; 
}
.div::before{
	content: '';
	display:inline-block;
	width: 5px;
	height: 5px;
	background: red;
	border-radius: 50%;
	margin-right: 3px;
}